<?xml version="1.0" encoding="UTF-8"?>
<!-- Configures the Camel Context-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

  <camelContext xmlns="http://camel.apache.org/schema/spring">
    <!-- here is a sample which processes the input files
         (leaving them in place - see the 'noop' flag)
         then performs content based routing on the message using XPath -->
    <route id="author">
      <from uri="file:src/data?noop=true"/>
      <choice>
        <when>
          <jsonpath>$.store.book[?(@.author == '')]</jsonpath>
           <log message="author has null value"/>
        </when>
         <when>
          <jsonpath>$.store.book[?(@.author == Nigel Rees)]</jsonpath>
           <log message="author Nigel found"/>
        </when>
        <when>
          <jsonpath>$.store.book[?(@.author == J. R. R. Tolkien)]</jsonpath>
           <log message="author Tolkien found"/>
        </when>

        <otherwise>
          <log message="All Authors have predefined values "/>
          <to uri="file:target/messages/others"/>
        </otherwise>
      </choice>
    </route>
<route id="price">
      <from uri="file:src/data2?noop=true"/>
      <choice>
        <when>
          <jsonpath>$.store.book[?(@.price &gt; 20)]</jsonpath>
           <log message="price is greate than 20"/>
        </when>
        <otherwise>
          <log message="All Authors have predefined values "/>
          <to uri="file:target/messages/others"/>
        </otherwise>
      </choice>
    </route>
    
</camelContext>

</beans>
